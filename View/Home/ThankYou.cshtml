@{
    ViewData["Title"] = "Order Confirmation";
}

<h1 style="text-align: center; color: #f1a7d3; font-family: 'Segoe UI', sans-serif; font-size: 3em; margin-bottom: 40px;">Order Confirmation</h1>

<div class="container">
    <div class="order-summary">
        <h2>Order Summary</h2>
        <div class="cart-items" id="order-items"></div>

        <div class="cart-total">
            <p><strong>Total: â‚¹<span id="total-amount"></span></strong></p>
        </div>

        <div class="payment-method">
            <p><strong>Payment Method: </strong><span id="payment-method"></span></p>
        </div>
        <!--transaction dates-->
        <div class="transaction-dates">
            <p><strong>Transaction Date: </strong><span id="transaction-date"></span></p>
        </div>
        <!-- Order Dates -->
        <div class="order-dates">
            <p><strong>Order Placed: </strong><span id="order-placed-date"></span></p>
            <p><strong>Delivery Expected: </strong><span id="delivery-expected-date"></span></p>
        </div>
    </div>
</div>

<style>
    body {
        background: linear-gradient(45deg, #f7e6f7, #c5c9ff);
        background-image: url('https://thumbs.dreamstime.com/b/delicate-pink-butterfly-gracefully-hovers-near-beautiful-flowers-sunset-reflecting-soft-pastel-colors-sky-floats-377897334.jpg');
        font-family: 'Segoe UI', sans-serif;
        color: #333;
        margin: 0;
        padding: 40px;
        box-sizing: border-box;
    }

    h1 {
        font-family: 'Lora', serif;
        text-align: center;
        color: #f6a1d6;
        margin-bottom: 40px;
        letter-spacing: 2px;
        text-transform: uppercase;
    }

    /* Order Summary */


    .order-summary {
        background-color: #fff;
        padding: 30px;
        border-radius: 15px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }

    /* Cart Items */
    .cart-items {
        margin-bottom: 20px;
    }

    .cart-item {
        padding: 20px;
        background-color: #f2e0e6;
        margin: 15px 0;
        border-radius: 10px;
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
        color: #4a4a4a;
        font-size: 1.1em;
        transition: all 0.3s ease;
    }

        .cart-item p {
            margin: 8px 0;
        }

    .product-name {
        font-weight: bold;
        font-size: 1.3em;
        color: #ff7f7f;
    }

    .product-price {
        color: #a5b4d6;
        font-size: 1.2em;
    }

    .product-quantity {
        color: #7d7d7d;
        font-size: 1.1em;
    }

    /* Total and Payment Section */
    .cart-total, .payment-method {
        background-color: #f1d0d6;
        padding: 15px;
        margin-top: 30px;
        border-radius: 10px;
    }

        .cart-total p, .payment-method p {
            font-size: 1.5em;
            color: #333;
            margin: 10px 0;
        }

        .payment-method p {
            font-size: 1.2em;
            color: #5a5a5a;
        }
    /* transaction dates*/
    .transaction-dates p {
        font-size: 1.2em;
        margin: 5px 0;
        color: #666;
    }

    .transaction-dates {
        margin-top: 30px;
    }
    /* Order Dates */
    .order-dates p {
        font-size: 1.2em;
        margin: 5px 0;
        color: #666;
    }

    .order-dates {
        margin-top: 30px;
    }

    /* Hover Effects */
    .cart-item:hover {
        background-color: #ffe6f2;
        transform: translateY(-5px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }





    /* Elegant Button Styling (if you want to add buttons later) */
    .btn {
        background-color: #ff9b8f;
        color: #fff;
        padding: 12px 30px;
        border-radius: 30px;
        font-size: 1.2em;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

        .btn:hover {
            background-color: #f29d9d;
        }
</style>

<script>
    // Function to load the order summary
    function loadOrderSummary() {
        // Retrieve the cart and total from sessionStorage
        var cart = JSON.parse(sessionStorage.getItem("cart")) || [];
        var total = sessionStorage.getItem("total") || 0;
        var paymentMethod = sessionStorage.getItem("paymentMethod");

        // If no cart data is available, redirect to the homepage or another page
        if (cart.length === 0) {
            window.location.href = "/Home";  // Adjust if needed
        }

        var cartHTML = '';
        cart.forEach(function (product) {
            cartHTML += `
            <div class="cart-item">
                <p class="product-name">${product.name}</p>
                <p class="product-price">${product.price}</p>
                <p class="product-quantity">Quantity: ${product.quantity || 1}</p>
            </div>
        `;
        });

        // Display cart items and total amount
        document.getElementById("order-items").innerHTML = cartHTML;
        document.getElementById("total-amount").innerText = total;
        document.getElementById("payment-method").innerText = paymentMethod;

        // Calculate Order Placed Date and Delivery Expected Date
        var orderPlacedDate = new Date();  // Current date
        var deliveryExpectedDate = new Date(orderPlacedDate);  // Copy the order placed date
        deliveryExpectedDate.setDate(orderPlacedDate.getDate() + 7); // Add 7 days to the order placed date

        // Format dates in a readable format
        var orderPlacedDateString = orderPlacedDate.toLocaleDateString("en-IN", {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });

        var deliveryExpectedDateString = deliveryExpectedDate.toLocaleDateString("en-IN", {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });

        // Set the transaction date based on the payment method
        var transactionDate = new Date();  // Default to current date
        if (paymentMethod === "Card") {
            // Add a 2-day delay for card payments
            transactionDate.setDate(transactionDate.getDate() + 2);  // Simulating card payment processing time
        }
        // Format transaction date
        var transactionDateString = transactionDate.toLocaleDateString("en-IN", {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });

        // Display the dates
        document.getElementById("order-placed-date").innerText = orderPlacedDateString;
        document.getElementById("delivery-expected-date").innerText = deliveryExpectedDateString;
        document.getElementById("transaction-date").innerText = transactionDateString;
    }

    // Load the order summary when the page is loaded
    window.onload = loadOrderSummary;
</script>
